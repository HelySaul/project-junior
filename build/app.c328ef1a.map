{"version":3,"sources":["app.js"],"names":["budgetController","Expense","id","description","value","percentage","prototype","calcPercentage","totalIncome","Math","round","getPercentage","Income","calculateTotal","type","sum","data","allItems","forEach","cur","totals","exp","inc","budget","addItem","des","val","newItem","ID","length","push","deleteItem","ids","index","map","current","indexOf","splice","calculateBudget","calculatePercentages","getPercentages","allPerc","getBudget","totalInc","totalExp","testing","console","log","UIController","DOMstrings","inputType","inputDescription","inputValue","inputBtn","incomeContainer","expensesContainer","budgetLabel","incomeLabel","expensesLabel","percentageLabel","container","expensesPercLabel","dateLabel","formatNumber","num","numSplit","int","dec","abs","toFixed","split","substr","nodeListForEach","list","callback","i","getInput","document","querySelector","parseFloat","addListItem","obj","html","newHtml","element","replace","insertAdjacentHTML","deleteListItem","selectorID","el","getElementById","parentNode","removeChild","clearFields","fields","fieldsArr","querySelectorAll","Array","slice","call","array","focus","displayBudget","textContent","displayPercentages","percentages","displayMonth","now","months","month","year","Date","getMonth","getFullYear","changedType","classList","toggle","getDOMstrings","controller","budgetCtrl","UICtrl","setupEventListeners","DOM","addEventListener","ctrlAddItem","event","keyCode","which","ctrlDeleteItem","updateBudget","updatePercentages","input","isNaN","itemID","splitID","target","parseInt","getDollar","URL","fetch","then","response","json","displayData","catch","error","dolarHigh","high","innerText","dolarLow","low","dolar","ask","init"],"mappings":"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","file":"app.c328ef1a.map","sourceRoot":"../src","sourcesContent":["// BUDGET CONTROLLER\nconst budgetController = (function () {\n    const Expense = function (id, description, value) {\n        this.id = id;\n        this.description = description;\n        this.value = value;\n        this.percentage = -1;\n    };\n\n\n    Expense.prototype.calcPercentage = function (totalIncome) {\n        if (totalIncome > 0) {\n            this.percentage = Math.round((this.value / totalIncome) * 100);\n        } else {\n            this.percentage = -1;\n        }\n    };\n\n\n    Expense.prototype.getPercentage = function () {\n        return this.percentage;\n    };\n\n\n    const Income = function (id, description, value) {\n        this.id = id;\n        this.description = description;\n        this.value = value;\n    };\n\n\n    const calculateTotal = function (type) {\n        let sum = 0;\n        data.allItems[type].forEach((cur) => {\n            sum += cur.value;\n        });\n        data.totals[type] = sum;\n    };\n\n\n    var data = {\n        allItems: {\n            exp: [],\n            inc: []\n        },\n        totals: {\n            exp: 0,\n            inc: 0\n        },\n        budget: 0,\n        percentage: -1\n    };\n\n\n    return {\n        addItem(type, des, val) {\n            let newItem,\n                ID;\n\n            // [1 2 3 4 5], next ID = 6\n            // [1 2 4 6 8], next ID = 9\n            // ID = last ID + 1\n\n            // Create new ID\n            if (data.allItems[type].length > 0) {\n                ID = data.allItems[type][data.allItems[type].length - 1].id + 1;\n            } else {\n                ID = 0;\n            }\n\n            // Create new item based on 'inc' or 'exp' type\n            if (type === 'exp') {\n                newItem = new Expense(ID, des, val);\n            } else if (type === 'inc') {\n                newItem = new Income(ID, des, val);\n            }\n\n            // Push it into our data structure\n            data.allItems[type].push(newItem);\n\n            // Return the new element\n            return newItem;\n        },\n\n\n        deleteItem(type, id) {\n            let ids,\n                index;\n\n            // id = 6\n            // data.allItems[type][id];\n            // ids = [1 2 4  8]\n            // index = 3\n\n            ids = data.allItems[type].map(current => current.id);\n\n            index = ids.indexOf(id);\n\n            if (index !== -1) {\n                data.allItems[type].splice(index, 1);\n            }\n        },\n\n\n        calculateBudget() {\n            // calculate total income and expenses\n            calculateTotal('exp');\n            calculateTotal('inc');\n\n            // Calculate the budget: income - expenses\n            data.budget = data.totals.inc - data.totals.exp;\n\n            // calculate the percentage of income that we spent\n            if (data.totals.inc > 0) {\n                data.percentage = Math.round((data.totals.exp / data.totals.inc) * 100);\n            } else {\n                data.percentage = -1;\n            }\n\n            // Expense = 100 and income 300, spent 33.333% = 100/300 = 0.3333 * 100\n        },\n\n        calculatePercentages() {\n            /*\n                  a=20\n                  b=10\n                  c=40\n                  income = 100\n                  a=20/100=20%\n                  b=10/100=10%\n                  c=40/100=40%\n                  */\n\n            data.allItems.exp.forEach((cur) => {\n                cur.calcPercentage(data.totals.inc);\n            });\n        },\n\n\n        getPercentages() {\n            const allPerc = data.allItems.exp.map(cur => cur.getPercentage());\n            return allPerc;\n        },\n\n\n        getBudget() {\n            return {\n                budget: data.budget,\n                totalInc: data.totals.inc,\n                totalExp: data.totals.exp,\n                percentage: data.percentage\n            };\n        },\n\n        testing() {\n            console.log(data);\n        }\n    };\n}());\n\n\n// UI CONTROLLER\nconst UIController = (function () {\n    const DOMstrings = {\n        inputType: '.add__type',\n        inputDescription: '.add__description',\n        inputValue: '.add__value',\n        inputBtn: '.add__btn',\n        incomeContainer: '.income__list',\n        expensesContainer: '.expenses__list',\n        budgetLabel: '.budget__value',\n        incomeLabel: '.budget__income--value',\n        expensesLabel: '.budget__expenses--value',\n        percentageLabel: '.budget__expenses--percentage',\n        container: '.container',\n        expensesPercLabel: '.item__percentage',\n        dateLabel: '.budget__title--month'\n    };\n\n\n    const formatNumber = function (num, type) {\n        var numSplit,\n            int,\n            dec,\n            type;\n        /*\n                + or - before number\n                exactly 2 decimal points\n                comma separating the thousands\n\n                2310.4567 -> + 2,310.46\n                2000 -> + 2,000.00\n                */\n\n        num = Math.abs(num);\n        num = num.toFixed(2);\n\n        numSplit = num.split('.');\n\n        int = numSplit[0];\n        if (int.length > 3) {\n            int = `${int.substr(0, int.length - 3)},${int.substr(int.length - 3, 3)}`; // input 23510, output 23,510\n        }\n\n        dec = numSplit[1];\n\n        return `${type === 'exp' ? '-' : '+'} ${int}.${dec}`;\n    };\n\n\n    const nodeListForEach = function (list, callback) {\n        for (let i = 0; i < list.length; i++) {\n            callback(list[i], i);\n        }\n    };\n\n\n    return {\n        getInput() {\n            return {\n                type: document.querySelector(DOMstrings.inputType).value, // Will be either inc or exp\n                description: document.querySelector(DOMstrings.inputDescription).value,\n                value: parseFloat(document.querySelector(DOMstrings.inputValue).value)\n            };\n        },\n\n\n        addListItem(obj, type) {\n            let html,\n                newHtml,\n                element;\n            // Create HTML string with placeholder text\n\n            if (type === 'inc') {\n                element = DOMstrings.incomeContainer;\n\n                html = '<div class=\"item clearfix\" id=\"inc-%id%\"> <div class=\"item__description\">%description%</div><div class=\"right-value\"><div class=\"item__value\">%value%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\n            } else if (type === 'exp') {\n                element = DOMstrings.expensesContainer;\n\n                html = '<div class=\"item clearfix\" id=\"exp-%id%\"><div class=\"item__description\">%description%</div><div class=\"right-value\"><div class=\"item__value\">%value%</div><div class=\"item__percentage\">21%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\n            }\n\n            // Replace the placeholder text with some actual data\n            newHtml = html.replace('%id%', obj.id);\n            newHtml = newHtml.replace('%description%', obj.description);\n            newHtml = newHtml.replace('%value%', formatNumber(obj.value, type));\n\n            // Insert the HTML into the DOM\n            document.querySelector(element).insertAdjacentHTML('beforeend', newHtml);\n        },\n\n\n        deleteListItem(selectorID) {\n            const el = document.getElementById(selectorID);\n            el.parentNode.removeChild(el);\n        },\n\n\n        clearFields() {\n            let fields,\n                fieldsArr;\n\n            fields = document.querySelectorAll(`${DOMstrings.inputDescription}, ${DOMstrings.inputValue}`);\n\n            fieldsArr = Array.prototype.slice.call(fields);\n\n            fieldsArr.forEach((current, index, array) => {\n                current.value = '';\n            });\n\n            fieldsArr[0].focus();\n        },\n\n\n        displayBudget(obj) {\n            let type;\n            obj.budget > 0 ? type = 'inc' : type = 'exp';\n\n            document.querySelector(DOMstrings.budgetLabel).textContent = formatNumber(obj.budget, type);\n            document.querySelector(DOMstrings.incomeLabel).textContent = formatNumber(obj.totalInc, 'inc');\n            document.querySelector(DOMstrings.expensesLabel).textContent = formatNumber(obj.totalExp, 'exp');\n\n            if (obj.percentage > 0) {\n                document.querySelector(DOMstrings.percentageLabel).textContent = `${obj.percentage}%`;\n            } else {\n                document.querySelector(DOMstrings.percentageLabel).textContent = '---';\n            }\n        },\n\n\n        displayPercentages(percentages) {\n            const fields = document.querySelectorAll(DOMstrings.expensesPercLabel);\n\n            nodeListForEach(fields, (current, index) => {\n                if (percentages[index] > 0) {\n                    current.textContent = `${percentages[index]}%`;\n                } else {\n                    current.textContent = '---';\n                }\n            });\n        },\n\n\n        displayMonth() {\n            let now,\n                months,\n                month,\n                year;\n\n            now = new Date();\n            // var christmas = new Date(2016, 11, 25);\n\n            months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n            month = now.getMonth();\n\n            year = now.getFullYear();\n            document.querySelector(DOMstrings.dateLabel).textContent = `${months[month]} ${year}`;\n        },\n\n\n        changedType() {\n            const fields = document.querySelectorAll(`${DOMstrings.inputType},${\n                DOMstrings.inputDescription},${\n                DOMstrings.inputValue}`);\n\n            nodeListForEach(fields, (cur) => {\n                cur.classList.toggle('red-focus');\n            });\n\n            document.querySelector(DOMstrings.inputBtn).classList.toggle('red');\n        },\n\n\n        getDOMstrings() {\n            return DOMstrings;\n        }\n    };\n}());\n\n\n// GLOBAL APP CONTROLLER\nconst controller = (function (budgetCtrl, UICtrl) {\n    const setupEventListeners = function () {\n        const DOM = UICtrl.getDOMstrings();\n\n        document.querySelector(DOM.inputBtn).addEventListener('click', ctrlAddItem);\n\n        document.addEventListener('keypress', (event) => {\n            if (event.keyCode === 13 || event.which === 13) {\n                ctrlAddItem();\n            }\n        });\n\n        document.querySelector(DOM.container).addEventListener('click', ctrlDeleteItem);\n\n        document.querySelector(DOM.inputType).addEventListener('change', UICtrl.changedType);\n    };\n\n\n    const updateBudget = function () {\n        // 1. Calculate the budget\n        budgetCtrl.calculateBudget();\n\n        // 2. Return the budget\n        const budget = budgetCtrl.getBudget();\n\n        // 3. Display the budget on the UI\n        UICtrl.displayBudget(budget);\n    };\n\n\n    const updatePercentages = function () {\n        // 1. Calculate percentages\n        budgetCtrl.calculatePercentages();\n\n        // 2. Read percentages from the budget controller\n        const percentages = budgetCtrl.getPercentages();\n\n        // 3. Update the UI with the new percentages\n        UICtrl.displayPercentages(percentages);\n    };\n\n\n    var ctrlAddItem = function () {\n        let input,\n            newItem;\n\n        // 1. Get the field input data\n        input = UICtrl.getInput();\n\n        if (input.description !== '' && !isNaN(input.value) && input.value > 0) {\n            // 2. Add the item to the budget controller\n            newItem = budgetCtrl.addItem(input.type, input.description, input.value);\n\n            // 3. Add the item to the UI\n            UICtrl.addListItem(newItem, input.type);\n\n            // 4. Clear the fields\n            UICtrl.clearFields();\n\n            // 5. Calculate and update budget\n            updateBudget();\n\n            // 6. Calculate and update percentages\n            updatePercentages();\n        }\n    };\n\n\n    var ctrlDeleteItem = function (event) {\n        let itemID,\n            splitID,\n            type,\n            ID;\n\n        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;\n\n        if (itemID) {\n            // inc-1\n            splitID = itemID.split('-');\n            type = splitID[0];\n            ID = parseInt(splitID[1]);\n\n            // 1. delete the item from the data structure\n            budgetCtrl.deleteItem(type, ID);\n\n            // 2. Delete the item from the UI\n            UICtrl.deleteListItem(itemID);\n\n            // 3. Update and show the new budget\n            updateBudget();\n\n            // 4. Calculate and update percentages\n            updatePercentages();\n        }\n    };\n\n    var getDollar = function () {\n        const URL = \"http://economia.awesomeapi.com.br/USD-BRL/1\";\n        fetch(URL)\n            .then(response => response.json())\n            .then((data) => {\n                console.log('Json object from getData function:');\n                console.log(data);\n                displayData(data);\n\n            })\n            .catch(error => console.log('There was an error: ', error))\n    }\n\n\n    var displayData = function (data) {\n\n        const dolarHigh = data[0].high;\n        document.querySelector('#high').innerText = dolarHigh;\n\n        const dolarLow = data[0].low;\n        document.querySelector('#low').innerText = dolarLow;\n\n        const dolar = data[0].ask;\n        document.querySelector('#current').innerText = dolar;\n\n    }\n\n    return {\n        init() {\n            getDollar();\n            UICtrl.displayMonth();\n            UICtrl.displayBudget({\n                budget: 0,\n                totalInc: 0,\n                totalExp: 0,\n                percentage: -1\n            });\n            setupEventListeners();\n        }\n    };\n}(budgetController, UIController));\n\n\ncontroller.init();\n"]}